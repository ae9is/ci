# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

# Faster workflow for testing performance optimisations

name: fast

on:
#  push:
#    branches: [ "main" ]
#  pull_request:
#    branches: [ "main" ]
  # Manual run from GitHub UI
  workflow_dispatch:
  # Wednesdays at 0400
#  schedule:
#    - cron: '0 4 * * 3'

jobs:
  build-and-test:
    timeout-minutes: 2
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [lts/*]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/
    env:
      # Suppresses annoying warning https://github.com/cypress-io/cypress/issues/15679
      TERM: xterm
      # Suppress Cypress installation progress messages
      CI: 1
    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    # Warning: Caching node_modules can't be used across node versions or with npm ci
    # ref: https://github.com/actions/cache/blob/main/examples.md#node---npm
    - name: Cache node_modules and Cypress
      id: cache-deps
      uses: actions/cache@v3
      with:
        path: |
          node_modules
          ~/.cache/Cypress
        key: node-${{ matrix.node-version }}-on-${{ runner.os }}-deps-${{ hashFiles('package-lock.json') }}

    - name: Install
      # Run install unless exact cache hit occurred i.e. package-lock.json did not change
      if: steps.cache-deps.outputs.cache-hit != 'true'
      run: npm install

    - name: Build
      run: npm run build --if-present

    - name: Test
      run: npm run test

  rebuild-docs:
    needs: [build-and-test]
    if: startsWith(github.event.head_commit.message, 'release:')
    timeout-minutes: 1
    runs-on: ubuntu-latest
    steps:
    - name: Get release version string
      id: getVersion
      run: |
        VALUE=$(echo ${{ github.event.head_commit.message }} | sed 's/release://' | sed 's/[[:space:]]*//g')
        echo ::set-output name=value::$VALUE

    - name: Commit /docs
      # EndBug/add-and-commit@v9.1.1
      uses: EndBug/add-and-commit@61a88be553afe4206585b31aa72387c64295d08b
      with:
        add: 'docs'
        message: "ci: rebuild docs for release ${{ steps.getVersion.outputs.value }}"

    - name: Create tag
      uses: actions/github-script@v6
      with:
        script: |
          github.rest.git.createRef({
            owner: context.repo.owner,
            repo: context.repo.repo,
            ref: "refs/tags/${{ steps.getVersion.outputs.value }}",
            sha: context.sha
          })